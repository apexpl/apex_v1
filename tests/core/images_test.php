<?php
declare(strict_types = 1);

namespace tests\core;

use apex\app;
use apex\svc\db;
use apex\svc\debug;
use apex\app\utils\images;
use apex\app\tests\test;

/**
 * Handles all unit test for the images library, which is 
* located at /src/app/utils/images.php.
 */
class test_images extends test
{

/**
 * setUp
 */
public function setUp():void
{

    // Get app
    if (!$app = app::get_instance()) { 
        $app = new app('test');
    }

}

/**
 * tearDown
 */
public function tearDown():void
{

}

/**
 * Add image
 */
public function test_add()
{

    // Initialize
    $contents = base64_decode('');
    $client = new images();
    db::query("DELETE FROM images WHERE type = 'unit_test'");

    // Add image
    $image_id = $client->add('screen.png', $contents, 'unit_test', 'apex', 'full', 1);

    // Check database row
    $row = db::get_idrow('images', $image_id);
    $this->assertNotFalse($row);
    $this->assertEquals('screen.png', $row['filename']);
    $this->assertEquals('unit_test', $row['type']);
    $this->assertEquals(300, (int) $row['width']);
    $this->assertEquals(225, (int) $row['height']);

}

/**
 * Upload
 */
public function test_upload()
{

    // Save file
    $tmp_file = sys_get_temp_dir() . '/' . uniqid();
    file_put_contents($tmp_file, base64_decode('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'));

    // Initialize
    $client = new images();
    app::add_file('logo', 'logo.png', $tmp_file);

    // Get false
    $this->assertFalse($client->upload('some_junk_alias', 'unit_test', 'some_junk_test'));

    // Upload file
    $image_id = $client->upload('logo', 'unit_test', 'logo');

    // Check database row
    $row = db::get_idrow('images', $image_id);
    $this->assertNotFalse($row);
    $this->assertEquals('logo.png', $row['filename']);
    $this->assertEquals('unit_test', $row['type']);
    $this->assertEquals(182, (int) $row['width']);
    $this->assertEquals(39, (int) $row['height']);

}

/**
 * Get image
 */
public function test_get()
{

    // Initialize
    $client = new images();
    app::update_config_var('core:cache', 1);

    // Get false
    $this->assertFalse($client->get('ungsagsdest', 'some_junk_alias'));

    // Get default
    list($filename, $type, $width, $height, $contents) = $client->get('unit_test', 'some_junk_alias', 'full', true);
    $this->assertEquals('screen.png', $filename);
    $this->assertEquals(300, (int) $width);
    $this->assertEquals(225, (int) $height);

    // Get other image
    list($filename, $type, $width, $height, $contents) = $client->get('unit_test', 'logo');
    $this->assertEquals('logo.png', $filename);

    // Get from cache now
    list($filename, $type, $width, $height, $contents) = $client->get('unit_test', 'logo');
    $this->assertEquals('logo.png', $filename);

}

/**
 * Display
 */
public function test_display()
{

    // Not found
    $html = $this->http_request('image/some_junk_alias-that_will_never_exist/test');
    $this->assertStringContains($html, 'No image exists');

    // Get image
    $html = $this->http_request('image/unit_test/logo/full');
    $this->assertTrue(true);

}

/**
 * Add thumbnail
 */
public function test_add_thumbnail()
{

    // Get image
    $client = new images();
    list($filename, $type, $width, $height, $contents) = $client->get('unit_test', 'screen', 'full', true);
    $this->assertEquals('screen.png', $filename);

    // Add thumbnail
    $image_id = $client->add_thumbnail('unit_test', 'screen', 'thumb', 50, 50);

    $this->assertNotFalse($image_id);

    // Check row
    $row = db::get_idrow('images', $image_id);
    $this->assertNotFalse($row);
    $this->assertEquals('thumb', $row['size']);
    $this->assertEquals(50, (int) $row['width']);
    $this->assertEquals(50, (int) $row['height']);

}


}


